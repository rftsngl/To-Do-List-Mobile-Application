/**
 * Status utility fonksiyonlarÄ±
 */

export type TaskStatus = 'todo' | 'in_progress' | 'blocked' | 'done';

/**
 * Status sÄ±ralamasÄ± iÃ§in sayÄ±sal deÄŸer dÃ¶ndÃ¼r
 * 0: todo (en Ã¼stte)
 * 1: in_progress
 * 2: blocked  
 * 3: done (en altta)
 */
export function statusOrder(status: TaskStatus): number {
  switch (status) {
    case 'todo': return 0;
    case 'in_progress': return 1;
    case 'blocked': return 2;
    case 'done': return 3;
    default: return 0;
  }
}

/**
 * Status'u kullanÄ±cÄ± dostu TÃ¼rkÃ§e metne Ã§evir
 */
export function getStatusLabel(status: TaskStatus): string {
  switch (status) {
    case 'todo': return 'YapÄ±lacak';
    case 'in_progress': return 'Devam Ediyor';
    case 'blocked': return 'Engellendi';
    case 'done': return 'TamamlandÄ±';
    default: return 'YapÄ±lacak';
  }
}

/**
 * TÃ¼m status seÃ§eneklerini dÃ¶ndÃ¼r
 */
export function getAllStatuses(): { value: TaskStatus; label: string }[] {
  return [
    { value: 'todo', label: 'YapÄ±lacak' },
    { value: 'in_progress', label: 'Devam Ediyor' },
    { value: 'blocked', label: 'Engellendi' },
    { value: 'done', label: 'TamamlandÄ±' },
  ];
}

/**
 * Status'un aktif (tamamlanmamÄ±ÅŸ) olup olmadÄ±ÄŸÄ±nÄ± kontrol et
 */
export function isActiveStatus(status: TaskStatus): boolean {
  return status !== 'done';
}

/**
 * Status'un tamamlanmÄ±ÅŸ olup olmadÄ±ÄŸÄ±nÄ± kontrol et
 */
export function isCompletedStatus(status: TaskStatus): boolean {
  return status === 'done';
}

/**
 * Priority seviyesini kullanÄ±cÄ± dostu metne Ã§evir
 */
export function getPriorityLabel(priority: number): string {
  switch (priority) {
    case 0: return 'DÃ¼ÅŸÃ¼k';
    case 1: return 'Normal';
    case 2: return 'YÃ¼ksek';
    case 3: return 'Kritik';
    default: return 'Normal';
  }
}

/**
 * TÃ¼m priority seÃ§eneklerini dÃ¶ndÃ¼r
 */
export function getAllPriorities(): { value: number; label: string }[] {
  return [
    { value: 0, label: 'DÃ¼ÅŸÃ¼k' },
    { value: 1, label: 'Normal' },
    { value: 2, label: 'YÃ¼ksek' },
    { value: 3, label: 'Kritik' },
  ];
}

/**
 * Priority'yi emoji ile gÃ¶ster
 */
export function getPriorityEmoji(priority: number): string {
  switch (priority) {
    case 0: return 'ğŸŸ¢';
    case 1: return 'ğŸ”µ';
    case 2: return 'ğŸŸ¡';
    case 3: return 'ğŸ”´';
    default: return 'ğŸ”µ';
  }
}

/**
 * Status'u emoji ile gÃ¶ster
 */
export function getStatusEmoji(status: TaskStatus): string {
  switch (status) {
    case 'todo': return 'âšª';
    case 'in_progress': return 'ğŸŸ¡';
    case 'blocked': return 'ğŸ”´';
    case 'done': return 'âœ…';
    default: return 'âšª';
  }
}
